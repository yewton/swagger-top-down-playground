@container-lg: 900px;
@container-sm: 800px;

html {
  height: 100%;
  overflow-y: scroll;
  font-size: 62.5%;
  font-family: "Hiragino Kaku Gothic Pro", Meiryo, sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  height: 100%;
  line-height: 1.5;
  margin: 0;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}


.table.swagger--summary>tbody>tr>td {
  &.swagger--summary-path {
    vertical-align: middle;
  }

  p {
    margin: 0;
  }
}

// Draw a panel in a given color
.swagger--panel-operation(@color) {
  .panel-variant(darken(@color,30%), @panel-default-text, @color, darken(@color, 30%));

  .operation-name {
    font-weight: bold;
  }

  .operation-path-prefix {
    font-weight: normal;
    font-size: small;
    font-style: italic;
    display: none;
  }

  .operation-summary {
    .pull-right
  }
}

// Panels
.swagger--panel-operation-post {
    .swagger--panel-operation(#e7f6ec);
  }

.swagger--panel {
  &-operation-get {
    .swagger--panel-operation(#e7f0f7);
  }

  &-operation-put {
    .swagger--panel-operation(#f9f2e9);
  }

  &-operation-patch {
    .swagger--panel-operation(#FCE9E3);
  }

  &-operation-options {
    .swagger--panel-operation(#e7f0f7);
  }

  &-operation-delete {
    .swagger--panel-operation(#f5e8e8);
  }

  &-operation-head {
    .swagger--panel-operation(#fcffcd);
  }
}

.sw-operation-description {
  .named-section(@msg-sw-section-operation-description);
}

.sw-request-params {
  .named-section(@msg-sw-section-request-params);
}

.sw-request-body {
  .named-section(@msg-sw-section-request-body);
}

.sw-responses {
  .named-section(@msg-sw-section-responses);
}

.table-header(@label,@width: auto) {
  width: auto;
  &:before {
    content: @label;
  }
}


.swagger--global {
  .named-label(@msg-sw-badge-global);
}


// Tables
table.table {

  th.sw-param-key {
    .table-header(@msg-sw-param-key, 10%);
  }
  th.sw-param-name {
    .table-header(@msg-sw-param-name, 10%);
  }
  th.sw-param-description {
    .table-header(@msg-sw-param-description);
  }
  th.sw-param-data-type {
    .table-header(@msg-sw-param-data-type, 30%);
  }
  th.sw-param-type {
    .table-header(@msg-sw-param-type, 10%);
  }

  th.sw-request-security-schema {
    .table-header(@msg-sw-request-security-schema, 50%);
  }
  th.sw-request-security-scopes {
    .table-header(@msg-sw-request-security-scopes, 50%);
  }
  
  th.sw-response-header-name {
    .table-header(@msg-sw-response-header-name)
  }

  th.sw-response-header-description {
    .table-header(@msg-sw-response-header-description)
  }

  th.sw-response-header-data-type {
    .table-header(@msg-sw-response-header-data-type)
  }

  td.sw-param-type {
    font-family: monospace;
  }

}

.sw-response-name-value {
  font-weight: bold;
}

.sw-param-collection-format {
}

.sw-response-description-text {
  padding-bottom: 0.5em;
}

code.highlight {
  padding: 0
}

.panel-security-definition {
  .panel-variant(@security-definition-panel-border-color, @security-definition-panel-header-text-color, @security-definition-panel-header-bg-color, @security-definition-panel-border-color);
}

.sw-request-security {
  .named-section(@msg-sw-section-request-security);
}

.sw-security-definition-basic {
  &:before {
    color: @gray;
    font-size: smaller;
    content: @msg-sw-security-definition-type-basic;
  }
}

span.sw-default-value-header {
  font-weight: bold;
}

.panel-definition {
  .panel-variant(@definition-panel-border-color, @definition-panel-header-text-color, @definition-panel-header-bg-color, @definition-panel-border-color);
}

// Named sections
.named-section(@title) {
  &:before {
    font-weight: bold;
    color: @named-section-text-color;
    text-transform: uppercase;
    content: @title;
    padding-bottom: 0.5em;
    display: block;
  }
  &:not(:last-child) {
    padding-bottom: 1.5em;
  }
}

.json-schema-description {
  .named-section(@msg-json-section-description);
}

.json-schema-properties {
  .named-section(@msg-json-section-properties);

  dd:not(:last-child) {
    padding-bottom: 1em;
  }

  dl {
    margin: 0;
  }
}

.json-schema-example {
  .named-section(@msg-json-section-example);
}

.json-schema-array-items {
  .named-section(@msg-json-section-items);
}

.json-schema-allOf-inherited {
  .named-section(@msg-json-section-inherited);
  ul {
    .list-unstyled();
  }
}

.json-schema-anyOf {
  > dl {
    border-left: 2px solid @definition-panel-inner-border-color;
    padding-left: 1em;

    dt:not(:first-child):before {
      content: "or ";
    }

    dt:first-child:before {
      content: "either ";
    }

  }
}

.json-schema-additionalProperties {
  .named-section(@msg-json-section-additionalProperties);
}

.json-inner-schema {
  .json-schema-properties,
  .json-schema-array-items,
  .json-schema-description,
  .json-schema-example {
    padding-left: 1em;
    margin-top: 0.5em;
    padding-bottom: 0.0em;
    border-left: 2px solid @definition-panel-inner-border-color;
  }
}

.named-label(@name) {
  &:before {
    .label();
    .label-default();
    content: @name;
  }
}

.json-property-discriminator {
  .named-label(@msg-json-discriminator)
}

.json-property-required {
  .named-label(@msg-json-required)
}

.json-property-read-only {
  .named-label(@msg-json-read-only)
}


.json-property-type {
  font-style: italic;
  font-weight: bold;
}

.json-property-format {
  font-size: smaller;
}

.json-property-enum {
  font-weight: normal;
  font-size: small;
}

.json-property-default-value {
  font-weight: normal;
  font-size: small;
  &:before {
    content: '(default: "';
  }
  &:after {
    content: '")';
  }
}

.json-property-enum-item {
  &:before, &:after {
    content: "\""
  }
  font-weight: normal;
  font-size: small;
  font-family: monospace;
}

.json-schema--reference {
  font-size: 90%;
}
